{"version":3,"sources":["Components/TodoTask.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TodoTask","task","complateTask","className","taskName","deadline","onClick","App","useState","setTask","setDeadline","todoList","setTodoList","handleChange","e","target","name","value","Number","taskNameToDelete","filter","type","placeholder","onChange","newTask","map","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAsBeA,EAdE,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,aACrB,OACI,sBAAKC,UAAU,OAAf,UACI,sBAAKA,UAAU,UAAf,UACI,+BAAOF,EAAKG,WACZ,+BAAOH,EAAKI,cAEhB,wBAAQC,QAAS,WACbJ,EAAaD,EAAKG,WADtB,mBCuCGG,MA/Cf,WAEE,MAAwBC,mBAAiB,IAAzC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAAgCD,mBAAiB,GAAjD,mBAAOH,EAAP,KAAiBK,EAAjB,KACA,EAAgCF,mBAAkB,IAAlD,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAACC,GACC,SAAlBA,EAAEC,OAAOC,KACVP,EAAQK,EAAEC,OAAOE,OAEjBP,EAAYQ,OAAOJ,EAAEC,OAAOE,SAW1Bf,EAAe,SAACiB,GACpBP,EAAYD,EAASS,QAAO,SAACnB,GAC3B,OAAOA,EAAKG,WAAae,OAI7B,OACE,sBAAKhB,UAAU,MAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,uBAAOkB,KAAK,OAAOC,YAAY,UAAUL,MAAOhB,EAAMe,KAAK,OAAOO,SAAUV,IAC5E,uBAAOQ,KAAK,SAASC,YAAY,qBAAqBL,MAAOZ,EAAUW,KAAK,WAAWO,SAAUV,OAEnG,wBAAQP,QApBE,WACd,IAAMkB,EAAU,CAACpB,SAAUH,EAAMI,SAAUA,GAC3CO,EAAY,GAAD,mBAAKD,GAAL,CAAea,KAC1Bf,EAAQ,IACRC,EAAY,IAgBR,yBAEF,qBAAKP,UAAU,WAAf,SAEIQ,EAASc,KAAI,SAACxB,EAAayB,GACzB,OAAO,cAAC,EAAD,CAAoBzB,KAAMA,EAAMC,aAAcA,GAA/BwB,YChCnBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8e442ca5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ITask } from '../Interfaces';\r\n\r\ninterface Props{\r\n    task: ITask,\r\n    complateTask : (taskNameToDelete: string)=> void\r\n}\r\n\r\nconst TodoTask = ({task, complateTask}:Props) => {\r\n    return (\r\n        <div className=\"task\">\r\n            <div className=\"content\">\r\n                <span>{task.taskName}</span>\r\n                <span>{task.deadline}</span>\r\n            </div>\r\n            <button onClick={()=>{\r\n                complateTask(task.taskName)\r\n            }}>X</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoTask;","import React from 'react';\nimport { ChangeEvent } from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport TodoTask from './Components/TodoTask';\nimport {ITask} from './Interfaces';\n\nfunction App() {\n\n  const [task, setTask] = useState<string>(\"\");\n  const [deadline, setDeadline] = useState<number>(0);\n  const [todoList, setTodoList] = useState<ITask[]>([]);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>)=>{\n    if(e.target.name === \"task\"){\n      setTask(e.target.value)\n    }else{\n      setDeadline(Number(e.target.value));\n    }\n  };\n\n  const addTask = () =>{\n    const newTask = {taskName: task, deadline: deadline};\n    setTodoList([...todoList, newTask ]);\n    setTask(\"\");\n    setDeadline(0);\n  };\n\n  const complateTask = (taskNameToDelete: string) =>{\n    setTodoList(todoList.filter((task)=>{\n      return task.taskName !== taskNameToDelete;\n    }))\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <div className=\"inputContainer\">\n          <input type=\"text\" placeholder=\"Task...\" value={task} name=\"task\" onChange={handleChange} />\n          <input type=\"number\" placeholder=\"Deadline (in Days)\" value={deadline} name=\"deadline\" onChange={handleChange} />\n        </div>\n        <button onClick={addTask}>Add Task</button>\n      </div>\n      <div className=\"todoList\">\n        {\n          todoList.map((task: ITask, key: number)=>{\n            return <TodoTask key={key} task={task} complateTask={complateTask}></TodoTask>\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}